// =========================================
// Exercice 2: Arrow functions
// =========================================

console.log("üü® Exercice 2: Arrow functions");
console.log("===============================");

// FONCTION ORIGINALE √† convertir
function greetUser(name, age) {
  return "Hello " + name + ", you are " + age + " years old!";
}

console.log("\nüìã Fonction originale:");
console.log(greetUser("Alice", 25));

// TODO: Convertissez en arrow function ET utilisez template literals
console.log("\n‚úÖ Votre solution:");

// const greetUserArrow = ... votre code ici

// D√©commentez pour tester:
// console.log(greetUserArrow('Bob', 30));

// BONUS: Version ultra-simplifi√©e (une ligne)
// const greetUserSimple = ... votre code ici

// Tests automatiques
console.log("\nüß™ Tests:");
try {
  // D√©commentez quand vous avez impl√©ment√©:
  // console.log('‚úÖ Arrow function:', greetUserArrow('Charlie', 35));
  // console.log('‚úÖ Version simple:', greetUserSimple('Diana', 28));
  console.log("‚è≥ Impl√©mentez vos fonctions pour voir les tests");
} catch (error) {
  console.log("‚ùå Erreur:", error.message);
}

// QUESTIONS DE R√âFLEXION:
console.log("\n‚ùì Questions:");
console.log(
  "1. Quelle est la diff√©rence entre arrow function et function normale?"
);
console.log("2. Dans quels cas √©viter les arrow functions?");
console.log('3. Que signifie "lexical this" ?');
